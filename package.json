{
	"name": "anytype",
	"version": "0.43.2",
	"description": "Anytype",
	"main": "electron.js",
	"scripts": {
		"precommit": "npx lint-staged",
		"typecheck": "npx tsc --noEmit -p tsconfig.json",
		"lint": "eslint .",
		"electron": "npx electron .",
		"electron-win": "npx electron.cmd .",
		"start:watch": "cross-env-shell webpack-dev-server --progress --mode=development --node-env=development  --env SERVER_PORT=$SERVER_PORT --env DATA_PATH=$DATA_PATH --history-api-fallback --cache",
		"start:electron-wait-webpack": "cross-env-shell wait-for-localhost $SERVER_PORT && npm run electron",
		"start:electron-wait-webpack-win": "cross-env-shell wait-for-localhost $SERVER_PORT && npm run electron-win",
		"start:dev": "npm-run-all --parallel start:watch start:electron-wait-webpack",
		"start:dev-win": "npm-run-all --parallel start:watch start:electron-wait-webpack-win",
		"build": "webpack --mode=production --node-env=production --config webpack.config.js",
		"build:dev": "webpack --mode=development --node-env=development --config webpack.config.js",
		"build:deps": "webpack --config webpack.node.config.js --stats detailed | grep 'node_modules' | sed -E 's/.*(node_modules[\\/][^\\\\/[:space:]]{1,})[\\\\/].*/\\1/' | uniq | node save-node-deps.js",
		"build:nmh": "go build -o dist/nativeMessagingHost ./go/nativeMessagingHost.go",
		"build:nmh-win": "go build -o dist/nativeMessagingHost.exe ./go/nativeMessagingHost.go",
		"dist:mac": "npm run build:deps && webpack --progress --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --macos --arm64 --x64",
		"dist:macarm": "npm run build:deps && webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --macos --arm64",
		"dist:macamd": "npm run build:deps && webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --macos --x64",
		"dist:win": "webpack --mode=production --node-env=production && electron-builder --windows",
		"dist:linux": "npm run build:deps && webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --linux --arm64 --x64",
		"dist:linuxamd": "npm run build:deps && webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --linux --x64",
		"dist:linuxarm": "npm run build:deps && webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` electron-builder --linux --arm64",
		"publish:mac": "webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` BUILD_NUMBER=`git rev-parse --short HEAD` electron-builder --macos --publish  always",
		"publish:linux": "webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` BUILD_NUMBER=`git rev-parse --short HEAD` electron-builder --linux --publish  always",
		"publish:win": "webpack --mode=production --node-env=production && DATE=`date '+%Y-%m-%d_%H_%M'` GIT_COMMIT=`git rev-parse --short HEAD` BUILD_NUMBER=`git rev-parse --short HEAD` electron-builder --windows --publish  always",
		"postinstall": "npx patch-package && electron-builder install-app-deps",
		"prepare": "husky install",
		"update:locale": "node ./electron/hook/locale.js"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/anyproto/anytype-ts.git"
	},
	"author": {
		"name": "Any Association",
		"email": "info@anytype.io"
	},
	"license": "SEE LICENSE IN LICENSE.md",
	"bugs": {
		"url": "https://github.com/anyproto/anytype-ts/issues"
	},
	"homepage": "https://anytype.io",
	"devDependencies": {
		"@electron/notarize": "^2.1.0",
		"@types/history": "^4.7.8",
		"@types/jquery": "^3.5.14",
		"@types/katex": "^0.14.0",
		"@types/lodash": "^4.14.165",
		"@types/node": "^12.19.4",
		"@types/prismjs": "^1.16.1",
		"@types/raf": "^3.4.0",
		"@types/react": "^16.14.31",
		"@types/react-dom": "^16.9.16",
		"@types/react-router-dom": "^4.3.5",
		"@typescript-eslint/eslint-plugin": "^6.18.1",
		"@typescript-eslint/parser": "^6.18.1",
		"cross-env": "^7.0.2",
		"css-loader": "^3.6.0",
		"electron": "^33.0.1",
		"electron-builder": "^24.13.3",
		"eslint": "^8.29.0",
		"eslint-plugin-react": "^7.31.11",
		"husky": "^8.0.3",
		"license-checker": "^25.0.1",
		"lint-staged": "^13.0.3",
		"node-loader": "^1.0.2",
		"npm": "^10.5.0",
		"npm-run-all": "^4.1.5",
		"patch-package": "^6.4.7",
		"sass": "1.77.6",
		"sass-loader": "^8.0.2",
		"source-map-loader": "^0.2.4",
		"style-loader": "^1.2.1",
		"ts-loader": "^6.2.2",
		"typescript": "^5.3.3",
		"typescript-eslint": "^0.0.1-alpha.0",
		"url-loader": "^4.1.1",
		"wait-for-localhost-cli": "^3.0.0",
		"webpack": "^5.74.0",
		"webpack-bundle-analyzer": "^4.5.0",
		"webpack-cli": "^4.10.0",
		"webpack-dev-server": "^4.13.1"
	},
	"dependencies": {
		"@electron/remote": "^2.1.2",
		"@emoji-mart/data": "^1.1.2",
		"@sentry/browser": "^7.39.0",
		"@sentry/cli": "^2.18.1",
		"@types/emoji-mart": "^3.0.13",
		"@viz-js/viz": "^3.2.4",
		"amplitude-js": "^5.11.0",
		"array-move": "^2.2.2",
		"blueimp-load-image": "^2.31.0",
		"copy-webpack-plugin": "^12.0.2",
		"d3": "^7.0.1",
		"d3-force": "^3.0.0",
		"d3-force-cluster": "^0.1.2",
		"diff": "^5.2.0",
		"dompurify": "^3.0.6",
		"electron-dl": "^1.14.0",
		"electron-json-storage": "^4.5.0",
		"electron-log": "^3.0.9",
		"electron-updater": "^6.2.1",
		"electron-util": "^0.12.3",
		"electron-window-state": "^5.0.3",
		"emoji-mart": "^5.5.2",
		"findandreplacedomtext": "^0.4.6",
		"google-protobuf": "^3.14.0",
		"grpc-web": "^1.4.2",
		"history": "^4.10.1",
		"inputmask": "^5.0.5",
		"install": "^0.13.0",
		"jquery": "^3.5.1",
		"js-htmlencode": "^0.3.0",
		"katex": "^0.16.11",
		"keytar": "^7.7.0",
		"lazy-val": "^1.0.4",
		"lodash": "^4.17.20",
		"lodash.isequal": "^4.5.0",
		"mermaid": "^10.9.0",
		"mime-types": "^2.1.35",
		"mobx": "^6.6.1",
		"mobx-logger": "^0.7.1",
		"mobx-react": "^7.5.2",
		"node-gyp": "^9.0.0",
		"os": "^0.1.1",
		"pako": "^2.1.0",
		"pdfjs-dist": "^2.14.305",
		"prismjs": "^1.21.0",
		"qrcode.react": "^1.0.1",
		"raf": "^3.4.1",
		"react": "^17.0.2",
		"react-canvas-confetti": "^1.3.0",
		"react-dom": "^17.0.2",
		"react-minimal-pie-chart": "^8.3.0",
		"react-pdf": "^6.2.2",
		"react-router-dom": "^5.2.0",
		"react-sortable-hoc": "^2.0.0",
		"react-virtualized": "^9.22.3",
		"regedit": "^5.1.3",
		"sanitize-filename": "^1.6.3",
		"selection-ranges": "^3.0.3",
		"sha1": "^1.1.1",
		"stream-slicer": "^0.0.6",
		"swiper": "^11.0.3",
		"systeminformation": "^5.23.5"
	},
	"build": {
		"npmRebuild": true,
		"buildDependenciesFromSource": true,
		"generateUpdatesFilesForAllChannels": true,
		"beforeBuild": "./electron/hook/beforebuild.js",
		"afterSign": "./electron/hook/aftersign.js",
		"afterPack": "./electron/hook/afterpack.js",
		"appId": "com.anytype.anytype",
		"compression": "normal",
		"productName": "Anytype",
		"protocols": [
			{
				"name": "Anytype",
				"role": "Editor",
				"schemes": [
					"anytype"
				]
			}
		],
		"asarUnpack": [
			"dist/index.html",
			"dist/lib",
			"dist/anytypeHelper",
			"dist/anytypeHelper.exe",
			"dist/nativeMessagingHost.exe",
			"dist/nativeMessagingHost",
			"dist/font/**/*",
			"dist/workers/**/*",
			"dist/*.node",
			"dist/cmaps/**/*",
			"dist/embed/**/*",
			"dist/challenge/**/*",
			"dist/img/**/*",
			"dist/css/**/*",
			"dist/js/**/*",
			"electron/img/*",
			"electron/js/preload.js",
			"build",
			"node_modules/keytar/build/Release/keytar.node",
			"node_modules/lodash.isequal",
			"node_modules/read-chunk",
			"node_modules/@electron/remote",
			"node_modules/with-open-file",
			"node_modules/p-try",
			"node_modules/p-finally",
			"node_modules/file-type",
			"node_modules/regedit",
			"node_modules/mime-types"
		],
		"extraResources": [
			{
				"from": "node_modules/regedit/vbs",
				"to": "regedit/vbs",
				"filter": [
					"**/*"
				]
			}
		],
		"files": [
			"electron.js",
			"electron/js/**/*",
			"electron/json/*",
			"electron/env.json",
			"electron/img/*",
			"build",
			"!dist/*",
			"dist/index.html",
			"dist/embed/**/*",
			"dist/challenge/**/*",
			"dist/lib/**/*",
			"dist/img/**/*",
			"dist/css/**/*",
			"dist/js/**/*",
			"dist/*.js",
			"!dist/js/main.js.map",
			"dist/anytypeHelper.exe",
			"dist/anytypeHelper",
			"dist/nativeMessagingHost.exe",
			"dist/nativeMessagingHost",
			"dist/*.node",
			"dist/cmaps/**/*",
			"dist/font/**/*",
			"dist/workers/**/*",
			"!node_modules/**/*",
			{
				"from": "node_modules/google-protobuf",
				"to": "node_modules/google-protobuf"
			},
			{
				"from": "node_modules/grpc-web",
				"to": "node_modules/grpc-web"
			},
			{
				"from": "node_modules/lodash.isequal",
				"to": "node_modules/lodash.isequal"
			},
			{
				"from": "node_modules/lodash.escaperegexp",
				"to": "node_modules/lodash.escaperegexp"
			},
			{
				"from": "node_modules/read-chunk",
				"to": "node_modules/read-chunk"
			},
			{
				"from": "node_modules/with-open-file",
				"to": "node_modules/with-open-file"
			},
			{
				"from": "node_modules/@electron/remote",
				"to": "node_modules/@electron/remote"
			},
			{
				"from": "node_modules/p-try",
				"to": "node_modules/p-try"
			},
			{
				"from": "node_modules/p-finally",
				"to": "node_modules/p-finally"
			},
			{
				"from": "node_modules/file-type",
				"to": "node_modules/file-type"
			},
			{
				"from": "node_modules/regedit",
				"to": "node_modules/regedit"
			},
			{
				"from": "node_modules/stream-slicer",
				"to": "node_modules/stream-slicer"
			},
			{
				"from": "node_modules/util",
				"to": "node_modules/util"
			},
			{
				"from": "node_modules/mime-types",
				"to": "node_modules/mime-types"
			},
			{
				"from": "node_modules/@electron",
				"to": "node_modules/@electron"
			},
			{
				"from": "node_modules/async",
				"to": "node_modules/async"
			},
			{
				"from": "node_modules/balanced-match",
				"to": "node_modules/balanced-match"
			},
			{
				"from": "node_modules/brace-expansion",
				"to": "node_modules/brace-expansion"
			},
			{
				"from": "node_modules/builder-util-runtime",
				"to": "node_modules/builder-util-runtime"
			},
			{
				"from": "node_modules/concat-map",
				"to": "node_modules/concat-map"
			},
			{
				"from": "node_modules/core-util-is",
				"to": "node_modules/core-util-is"
			},
			{
				"from": "node_modules/debug",
				"to": "node_modules/debug"
			},
			{
				"from": "node_modules/electron-dl",
				"to": "node_modules/electron-dl"
			},
			{
				"from": "node_modules/electron-is-dev",
				"to": "node_modules/electron-is-dev"
			},
			{
				"from": "node_modules/electron-json-storage",
				"to": "node_modules/electron-json-storage"
			},
			{
				"from": "node_modules/electron-log",
				"to": "node_modules/electron-log"
			},
			{
				"from": "node_modules/electron-updater",
				"to": "node_modules/electron-updater"
			},
			{
				"from": "node_modules/electron-util",
				"to": "node_modules/electron-util"
			},
			{
				"from": "node_modules/electron-window-state",
				"to": "node_modules/electron-window-state"
			},
			{
				"from": "node_modules/ext-list",
				"to": "node_modules/ext-list"
			},
			{
				"from": "node_modules/ext-name",
				"to": "node_modules/ext-name"
			},
			{
				"from": "node_modules/fs-extra",
				"to": "node_modules/fs-extra"
			},
			{
				"from": "node_modules/fs.realpath",
				"to": "node_modules/fs.realpath"
			},
			{
				"from": "node_modules/glob",
				"to": "node_modules/glob"
			},
			{
				"from": "node_modules/graceful-fs",
				"to": "node_modules/graceful-fs"
			},
			{
				"from": "node_modules/has-flag",
				"to": "node_modules/has-flag"
			},
			{
				"from": "node_modules/if-async",
				"to": "node_modules/if-async"
			},
			{
				"from": "node_modules/imurmurhash",
				"to": "node_modules/imurmurhash"
			},
			{
				"from": "node_modules/inflight",
				"to": "node_modules/inflight"
			},
			{
				"from": "node_modules/inherits",
				"to": "node_modules/inherits"
			},
			{
				"from": "node_modules/is-plain-obj",
				"to": "node_modules/is-plain-obj"
			},
			{
				"from": "node_modules/isarray",
				"to": "node_modules/isarray"
			},
			{
				"from": "node_modules/js-yaml",
				"to": "node_modules/js-yaml"
			},
			{
				"from": "node_modules/jsonfile",
				"to": "node_modules/jsonfile"
			},
			{
				"from": "node_modules/keytar",
				"to": "node_modules/keytar"
			},
			{
				"from": "node_modules/lazy-val",
				"to": "node_modules/lazy-val"
			},
			{
				"from": "node_modules/lockfile",
				"to": "node_modules/lockfile"
			},
			{
				"from": "node_modules/lodash",
				"to": "node_modules/lodash"
			},
			{
				"from": "node_modules/lodash.escaperegexp",
				"to": "node_modules/lodash.escaperegexp"
			},
			{
				"from": "node_modules/lodash.isequal",
				"to": "node_modules/lodash.isequal"
			},
			{
				"from": "node_modules/mime-db",
				"to": "node_modules/mime-db"
			},
			{
				"from": "node_modules/minimatch",
				"to": "node_modules/minimatch"
			},
			{
				"from": "node_modules/mkdirp",
				"to": "node_modules/mkdirp"
			},
			{
				"from": "node_modules/modify-filename",
				"to": "node_modules/modify-filename"
			},
			{
				"from": "node_modules/ms",
				"to": "node_modules/ms"
			},
			{
				"from": "node_modules/new-github-issue-url",
				"to": "node_modules/new-github-issue-url"
			},
			{
				"from": "node_modules/once",
				"to": "node_modules/once"
			},
			{
				"from": "node_modules/path-exists",
				"to": "node_modules/path-exists"
			},
			{
				"from": "node_modules/path-is-absolute",
				"to": "node_modules/path-is-absolute"
			},
			{
				"from": "node_modules/pupa",
				"to": "node_modules/pupa"
			},
			{
				"from": "node_modules/readable-stream",
				"to": "node_modules/readable-stream"
			},
			{
				"from": "node_modules/regedit",
				"to": "node_modules/regedit"
			},
			{
				"from": "node_modules/rimraf",
				"to": "node_modules/rimraf"
			},
			{
				"from": "node_modules/sanitize-filename",
				"to": "node_modules/sanitize-filename"
			},
			{
				"from": "node_modules/sax",
				"to": "node_modules/sax"
			},
			{
				"from": "node_modules/semver",
				"to": "node_modules/semver"
			},
			{
				"from": "node_modules/signal-exit",
				"to": "node_modules/signal-exit"
			},
			{
				"from": "node_modules/sort-keys",
				"to": "node_modules/sort-keys"
			},
			{
				"from": "node_modules/sort-keys-length",
				"to": "node_modules/sort-keys-length"
			},
			{
				"from": "node_modules/stream-slicer",
				"to": "node_modules/stream-slicer"
			},
			{
				"from": "node_modules/string_decoder",
				"to": "node_modules/string_decoder"
			},
			{
				"from": "node_modules/supports-color",
				"to": "node_modules/supports-color"
			},
			{
				"from": "node_modules/systeminformation",
				"to": "node_modules/systeminformation"
			},
			{
				"from": "node_modules/through2",
				"to": "node_modules/through2"
			},
			{
				"from": "node_modules/truncate-utf8-bytes",
				"to": "node_modules/truncate-utf8-bytes"
			},
			{
				"from": "node_modules/universalify",
				"to": "node_modules/universalify"
			},
			{
				"from": "node_modules/unused-filename",
				"to": "node_modules/unused-filename"
			},
			{
				"from": "node_modules/wrappy",
				"to": "node_modules/wrappy"
			},
			{
				"from": "node_modules/write-file-atomic",
				"to": "node_modules/write-file-atomic"
			},
			{
				"from": "node_modules/xtend",
				"to": "node_modules/xtend"
			}
		],
		"dmg": {
			"sign": false
		},
		"mac": {
			"icon": "electron/img/icon.icns",
			"type": "distribution",
			"hardenedRuntime": true,
			"gatekeeperAssess": false,
			"entitlements": "electron/entitlements.mac.plist",
			"entitlementsInherit": "electron/entitlements.mac.plist",
			"target": {
				"target": "default",
				"arch": [
					"x64",
					"arm64"
				]
			},
			"identity": "J3NXTX3T5S",
			"category": "public.app-category.productivity",
			"artifactName": "${productName}-${version}-${os}-${arch}.${ext}",
			"publish": [
				{
					"provider": "generic",
					"url": "https://anytype-release.fra1.digitaloceanspaces.com"
				}
			],
			"signIgnore": [
				".*\\.pak$",
				".*\\.png$",
				".*\\.jpg$",
				".*\\.gif$",
				".*\\.mp4$",
				".*\\.icns$"
			]
		},
		"win": {
			"sign": "./electron/hook/sign.js",
			"target": "nsis",
			"icon": "electron/img/icons/256x256.ico",
			"publish": [
				{
					"provider": "generic",
					"url": "https://anytype-release.fra1.digitaloceanspaces.com"
				}
			]
		},
		"linux": {
			"icon": "electron/img/icons",
			"category": "Utility",
			"target": [
				"AppImage",
				"deb",
				"rpm",
				"tar.gz"
			],
			"description": "Anytype",
			"publish": [
				{
					"provider": "generic",
					"url": "https://anytype-release.fra1.digitaloceanspaces.com"
				}
			],
			"desktop": {
				"Name": "Anytype",
				"Categories": "Utility;Office;Calendar;ProjectManagement;",
				"Keywords": "project management;",
				"StartupWMClass": "anytype"
			}
		},
		"rpm": {
			"fpm": [
				"--rpm-rpmbuild-define",
				"_build_id_links none"
			]
		},
		"snap": {
			"publish": {
				"provider": "generic",
				"url": "https://anydummyurl.com"
			}
		}
	},
	"lint-staged": {
		"{src,electron}/**/*.{js,ts,tsx}": "eslint"
	},
	"husky": {
		"hooks": {
			"pre-commit": "npm run precommit && git add licenses.json"
		}
	}
}