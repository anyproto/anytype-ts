@import "~scss/_vars";

.widget.widgetTree {
	.ReactVirtualized__List { padding: 0px 8px 12px 8px; }

	.item { position: relative; }
	.item {
		.inner {
			display: flex; flex-direction: row; gap: 0px 2px; align-items: center; justify-content: space-between; cursor: pointer; position: relative;
			height: 28px; padding: 0px 8px 0px 0px;
		}
		.inner::before {
			content: ""; position: absolute; left: 0px; top: 0px; width: 100%; height: 100%; background: $colorHover; z-index: 1; pointer-events: none;
			border-radius: 4px; opacity: 0;
		}
		.inner:hover::before, .inner.hover::before { opacity: 1; }

		.dropTarget { border-radius: 4px; }

		.iconObject { flex-shrink: 0; flex-basis: 20px; }
		.icon { width: 20px; height: 20px; flex-shrink: 0; transition: none; }
		.icon.set { background-image: url('~img/icon/sidebar/set.svg'); }
		.icon.collection { background-image: url('~img/icon/sidebar/collection.svg'); }
		.icon.blank { background-image: url('~img/icon/sidebar/blank.svg'); }
		.icon.arrow { background-image: url('~img/arrow/select/dark.svg'); transform: rotate(-90deg); cursor: pointer; }

		.clickable {
			flex-grow: 1; display: flex; flex-direction: row; gap: 0px 6px; width: calc(100% - 30px); align-items: center; justify-content: space-between;
			cursor: pointer;
		}
		.name { flex-grow: 1; @include text-overflow-nw; }

		.buttons { flex-shrink: 0; flex-direction: row; align-items: center; gap: 0px 6px; display: none; }
		.buttons {
			.icon { width: 24px; height: 24px; border-radius: 4px; cursor: pointer; flex-shrink: 0; background-size: 20px; }
			.icon:hover { background-color: $colorHover; }
			.icon.active { opacity: 1; background-color: $colorHover; }
			.icon.more { background-image: url('~img/icon/menu/action/more0.svg'); }
			.icon.preview { background-size: 16px 14px; background-image: url('~img/icon/sidebar/preview.svg'); }
		}
	}

	.item:hover, .item.active {
		.clickable { width: calc(100% - 66px); }
		.buttons { display: flex; }
	}
	.item.active {
		.icon.more { background-color: $colorHover; }
	}

	.item.hover {
		.inner::before { background: $colorHover; }
		.icon.preview { display: block; }
	}
	.item.isOpen {
		.icon.arrow { transform: rotate(0deg); }
	}
}