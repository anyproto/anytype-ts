@import "~scss/_vars";

.pageMainStore {
	.wrapper { height: 100%; width: 100%; margin: 0px 0px 0px -50%; position: absolute; left: 50%; top: 0px; }

	.content { height: 100%; padding-top: 40px; }

	.body { width: 100%; height: 100%; display: flex; flex-direction: column; }
	.body {
		.mid { text-align: center; padding: 60px 0px 52px 0px; margin: 0px auto; max-width: 640px; }
		.mid {
			.title { margin-bottom: 25px; line-height: 40px; }
			.label { @include text-paragraph; margin: 0px auto 24px auto; max-width: 610px; }

			.filter { 
				max-width: 512px; height: 48px; margin: 0px auto; border: 1px solid $colorBorderDark; border-radius: 10px; padding: 0px; text-align: center;
				cursor: pointer;
			}
			.filter {
				.line { display: none; }
				.filterInputWrap { height: 100%; width: auto; }
				.inner { height: 100%; text-align: left; padding: 0px 16px; justify-content: center; }

				.input { height: 100%; line-height: 48px; @include text-paragraph; }
				.input:empty { display: none; }
				.placeholder { position: static; @include text-paragraph; }
			}
			.filter.isFocused, .filter.active {
				.input { display: block; }
				.placeholder { position: absolute; }
				.filterInputWrap { width: 100%; }
			}

			@media (max-width: 960px) {
				.title { @include text-header1; }
			}
		}

		.tabs { white-space: nowrap; text-align: left; display: flex; flex-direction: row; gap: 0px 24px; }
		.tabs {
			.tab { 
				display: inline-block; font-weight: 700; font-size: 18px; line-height: 26px; letter-spacing: -0.16px;
				color: $colorMediumGrey; transition: $transitionAllCommon;
			}
			.tab:hover, .tab.active { color: $colorBlack; }
		}

		.loaderWrapper { position: relative !important; }
		.ReactVirtualized__List { padding: 48px 80px; }

		.emptySearch { padding: 56px 0px; border: 1px solid $colorBorderDark; border-radius: 12px; height: auto; @include text-paragraph; }
		.emptySearch { 
			.txt { width: 512px; }
			b { font-weight: 700; }
		}

		.items { height: 100%; }
		.items {
			.row { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); grid-column-gap: 48px; }
			.row.block { display: block; }

			.item { height: 48px; line-height: 48px; display: flex; position: relative; justify-content: space-between; }
			.item {
				.flex { 
					flex-direction: row; align-items: center; padding: 14px 16px 14px 14px; border: 1px solid $colorBorderDark; border-radius: 10px; font-weight: 700;
					gap: 0px 8px; transition: $transitionAllCommon; max-width: calc(100% - 70px);
				}
				.flex:hover { background: $colorHoverMedium; }

				.iconObject { flex-shrink: 0; }
				.name { @include text-overflow-nw; width: 100%; }

				.buttons { flex-shrink: 0; }
				.buttons {
					.icon { width: 28px !important; height: 28px !important; background-size: 20px; border-radius: 4px; transition: $transitionAllCommon; }
					.icon.lock { 
						margin-right: -2px; width: 16px !important; height: 16px !important; background-size: 16px; background-image: url('~img/icon/store/lock.svg'); 
					}
					.icon.check { background-size: 28px; background-image: url('~img/icon/store/check0.svg'); }
					.icon.check:hover { background-image: url('~img/icon/store/check1.svg'); }
					.icon.plus { background-size: 28px; background-image: url('~img/icon/store/plus0.svg'); opacity: 0; }
					.icon.plus:hover { background-image: url('~img/icon/store/plus1.svg'); }

					.button { 
						@include text-common; opacity: 0; background: none; color: $colorDarkGrey; border-radius: 0px; padding: 0px; height: 1em; 
						line-height: 1em; cursor: default;
					}
					.button:hover { color: $colorBlack; }
				}
			}
			.item:hover {
				.buttons {
					.button, .icon { opacity: 1; }
				}
			}
		}
	}
}